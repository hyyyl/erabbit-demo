{"version":3,"file":"js/630.140f809b.js","mappings":"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","sources":["webpack://erabbit-client-pc/./src/views/login/index.vue","webpack://erabbit-client-pc/./src/views/login/components/login-header.vue","webpack://erabbit-client-pc/./src/views/login/components/login-header.vue?0934","webpack://erabbit-client-pc/./src/views/login/components/login-footer.vue","webpack://erabbit-client-pc/./src/views/login/components/login-footer.vue?fe47","webpack://erabbit-client-pc/./src/views/login/components/login-form.vue","webpack://erabbit-client-pc/./node_modules/vee-validate/dist/vee-validate.esm.js","webpack://erabbit-client-pc/./src/utils/vee-validate-schema.js","webpack://erabbit-client-pc/./src/views/login/components/login-form.vue?c986","webpack://erabbit-client-pc/./src/views/login/index.vue?b794"],"sourcesContent":["<template>\r\n  <login-header>欢迎登录</login-header>\r\n  <section class=\"login-section\">\r\n    <div class=\"wrapper\">\r\n      <nav>\r\n        <a href=\"javascript:;\" @click=\"isActive = 'account'\" :class=\"{active : isActive === 'account'}\">账户登录</a>\r\n        <a href=\"javascript:;\" @click=\"isActive = 'qrcode'\" :class=\"{active : isActive === 'qrcode'}\">扫码登录</a>\r\n      </nav>\r\n      <!-- 表单 -->\r\n      <login-form v-if=\"isActive === 'account' \">表单</login-form>\r\n      <!-- 二维码 -->\r\n      <div v-if=\"isActive === 'qrcode' \" class=\"qrcode-box\">\r\n        <img src=\"@/assets/images/qrcode.jpg\" alt=\"\">\r\n        <p>打开 <a href=\"javascript:;\">小兔鲜App</a> 扫码登录</p>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  <login-footer></login-footer>\r\n</template>\r\n\r\n<script>\r\nimport LoginHeader from '@/views/login/components/login-header'\r\nimport LoginFooter from '@/views/login/components/login-footer'\r\nimport { ref } from 'vue'\r\nimport LoginForm from '@/views/login/components/login-form'\r\n\r\nexport default {\r\n  name: 'Login',\r\n  components: {\r\n    LoginHeader,\r\n    LoginFooter,\r\n    LoginForm\r\n  },\r\n  setup () {\r\n    const isActive = ref('account')\r\n\r\n    return { isActive }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang='less'>\r\n.login-section {\r\n  background: url(../../assets/images/login-bg.png) no-repeat center / cover;\r\n  height: 488px;\r\n  position: relative;\r\n  .wrapper {\r\n    width: 380px;\r\n    background: #fff;\r\n    min-height: 400px;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 54px;\r\n    transform: translate3d(100px,0,0);\r\n    box-shadow: 0 0 10px rgba(0,0,0,.15);\r\n    nav {\r\n      height: 55px;\r\n      border-bottom: 1px solid #f5f5f5;\r\n      display: flex;\r\n      padding: 0 40px;\r\n      text-align: right;\r\n      align-items: center;\r\n      a {\r\n        flex: 1;\r\n        line-height: 1;\r\n        display: inline-block;\r\n        font-size: 18px;\r\n        position: relative;\r\n        &:first-child {\r\n          border-right: 1px solid #f5f5f5;\r\n          text-align: left;\r\n        }\r\n        &.active{\r\n          color: @xtxColor;\r\n          font-weight: bold;\r\n        }\r\n      }\r\n    }\r\n    // 二维码容器\r\n    .qrcode-box {\r\n      text-align: center;\r\n      padding-top: 40px;\r\n      p {\r\n        margin-top: 20px;\r\n        a {\r\n          color: @xtxColor;\r\n          font-size: 16px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <header class=\"login-header\">\r\n    <div class=\"container\">\r\n      <h1 class=\"logo\"><router-link to=\"/\">小兔鲜</router-link></h1>\r\n      <h3 class=\"sub\"> <slot></slot> </h3>\r\n      <router-link class=\"entry\" to=\"/\">\r\n        进入网站首页\r\n        <i class=\"iconfont icon-angle-right\"></i>\r\n        <i class=\"iconfont icon-angle-right\"></i>\r\n      </router-link>\r\n    </div>\r\n  </header>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'LoginHeader'\r\n}\r\n</script>\r\n\r\n<style scoped lang='less'>\r\n.login-header {\r\n  background: #fff;\r\n  border-bottom: 1px solid #e4e4e4;\r\n  .container {\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n  }\r\n  .logo {\r\n    width: 200px;\r\n    a {\r\n      display: block;\r\n      height: 132px;\r\n      width: 100%;\r\n      text-indent: -9999px;\r\n      background: url(../../../assets/images/logo.png) no-repeat center 18px / contain;\r\n    }\r\n  }\r\n  .sub {\r\n    flex: 1;\r\n    font-size: 24px;\r\n    font-weight: normal;\r\n    margin-bottom: 38px;\r\n    margin-left: 20px;\r\n    color: #666;\r\n  }\r\n  .entry {\r\n    width: 120px;\r\n    margin-bottom: 38px;\r\n    font-size: 16px;\r\n    i {\r\n      font-size: 14px;\r\n      color: @xtxColor;\r\n      letter-spacing: -5px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./login-header.vue?vue&type=template&id=547037fa&scoped=true\"\nimport script from \"./login-header.vue?vue&type=script&lang=js\"\nexport * from \"./login-header.vue?vue&type=script&lang=js\"\n\nimport \"./login-header.vue?vue&type=style&index=0&id=547037fa&scoped=true&lang=less\"\n\nimport exportComponent from \"D:\\\\Web\\\\Demo\\\\erabbit-client-pc\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-547037fa\"]])\n\nexport default __exports__","<template>\r\n  <footer class=\"login-footer\">\r\n    <div class='container'>\r\n      <p>\r\n        <a href=\"javascript:;\">关于我们</a>\r\n        <a href=\"javascript:;\">帮助中心</a>\r\n        <a href=\"javascript:;\">售后服务</a>\r\n        <a href=\"javascript:;\">配送与验收</a>\r\n        <a href=\"javascript:;\">商务合作</a>\r\n        <a href=\"javascript:;\">搜索推荐</a>\r\n        <a href=\"javascript:;\">友情链接</a>\r\n      </p>\r\n      <p>CopyRight &copy; 小兔鲜儿</p>\r\n    </div>\r\n  </footer>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'LoginFooter'\r\n}\r\n</script>\r\n\r\n<style scoped lang='less'>\r\n.login-footer {\r\n  padding: 30px 0 50px;\r\n  background: #fff;\r\n  p {\r\n    text-align: center;\r\n    color: #999;\r\n    padding-top: 20px;\r\n    a {\r\n      line-height: 1;\r\n      padding:0 10px;\r\n      color: #999;\r\n      display: inline-block;\r\n      ~ a {\r\n        border-left: 1px solid #ccc;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./login-footer.vue?vue&type=template&id=17badf56&scoped=true\"\nimport script from \"./login-footer.vue?vue&type=script&lang=js\"\nexport * from \"./login-footer.vue?vue&type=script&lang=js\"\n\nimport \"./login-footer.vue?vue&type=style&index=0&id=17badf56&scoped=true&lang=less\"\n\nimport exportComponent from \"D:\\\\Web\\\\Demo\\\\erabbit-client-pc\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-17badf56\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"account-box\">\r\n    <div class=\"toggle\">\r\n      <a @click=\"isMsgLogin=false\" href=\"javascript:;\" v-if=\"isMsgLogin\">\r\n        <i class=\"iconfont icon-user\"></i> 使用账号登录\r\n      </a>\r\n      <a @click=\"isMsgLogin=true\" href=\"javascript:;\" v-else>\r\n        <i class=\"iconfont icon-msg\"></i> 使用短信登录\r\n      </a>\r\n    </div>\r\n    <Form class=\"form\" :validation-schema=\"mySchema\" autocomplete=\"off\" v-slot=\"{errors}\">\r\n      <template v-if=\"!isMsgLogin\">\r\n        <div class=\"form-item\">\r\n          <div class=\"input\">\r\n            <i class=\"iconfont icon-user\"></i>\r\n            <Field type=\"text\" name=\"account\" :class=\"{error : errors.account}\" v-model=\"form.account\" placeholder=\"请输入用户名\" />\r\n          </div>\r\n          <div class=\"error\" v-if=\"errors.account\"><i class=\"iconfont icon-warning\" />{{errors.account}}</div>\r\n        </div>\r\n        <div class=\"form-item\">\r\n          <div class=\"input\">\r\n            <i class=\"iconfont icon-lock\"></i>\r\n            <Field type=\"password\" :class=\"{error : errors.password}\" v-model=\"form.password\" name=\"password\" placeholder=\"请输入密码\"/>\r\n          </div>\r\n          <div class=\"error\" v-if=\"errors.password\"><i class=\"iconfont icon-warning\" />{{errors.password}}</div>\r\n        </div>\r\n      </template>\r\n      <template v-else>\r\n        <div class=\"form-item\">\r\n          <div class=\"input\">\r\n            <i class=\"iconfont icon-user\"></i>\r\n            <Field type=\"text\" :class=\"{error : errors.mobile}\" v-model=\"form.mobile\" name=\"mobile\" placeholder=\"请输入手机号\" />\r\n          </div>\r\n          <div class=\"error\" v-if=\"errors.mobile\"><i class=\"iconfont icon-warning\" />{{errors.mobile}}</div>\r\n        </div>\r\n        <div class=\"form-item\">\r\n          <div class=\"input\">\r\n            <i class=\"iconfont icon-code\"></i>\r\n            <Field type=\"text\" :class=\"{error : errors.code}\" v-model=\"form.code\" name=\"code\" placeholder=\"请输入验证码\"/>\r\n            <span class=\"code\">发送验证码</span>\r\n          </div>\r\n          <div class=\"error\" v-if=\"errors.code\"><i class=\"iconfont icon-warning\" />{{errors.code}}</div>\r\n        </div>\r\n      </template>\r\n      <div class=\"form-item\">\r\n        <div class=\"agree\">\r\n          <Field as=\"xtx-checkbox\" v-model=\"form.isAgree\" name=\"isAgree\"></Field>\r\n          <span>我已同意</span>\r\n          <a href=\"javascript:;\">《隐私条款》</a>\r\n          <span>和</span>\r\n          <a href=\"javascript:;\">《服务条款》</a>\r\n        </div>\r\n      </div>\r\n      <a href=\"javascript:;\" class=\"btn\">登录</a>\r\n    </Form>\r\n    <div class=\"action\">\r\n      <img src=\"https://qzonestyle.gtimg.cn/qzone/vas/opensns/res/img/Connect_logo_7.png\" alt=\"\">\r\n      <div class=\"url\">\r\n        <a href=\"javascript:;\">忘记密码</a>\r\n        <a href=\"javascript:;\">免费注册</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { ref } from 'vue'\r\nimport { Field, Form } from 'vee-validate'\r\nimport schema from '@/utils/vee-validate-schema'\r\nexport default {\r\n  name: 'LoginForm',\r\n  components: {\r\n    Form,\r\n    Field\r\n  },\r\n  setup () {\r\n    // 是否短信登录\r\n    const isMsgLogin = ref(false)\r\n    // 表单信息对象\r\n    const form = ref({\r\n      isAgree: true,\r\n      account: null,\r\n      password: null,\r\n      mobile: null,\r\n      code: null\r\n    })\r\n    // vee-validate 校验基本步骤\r\n    // 1. 导入Form Field组件，将form和input进行替换，需要加上name指定校验规则函数\r\n    // 2. Field需要进行数据绑定,最好与后台接口一致\r\n    // 3. 定义name属性指定的校验规则函数 Form的validation-schema接收校验规则对象，当表单失去焦点就会进行规则校验\r\n    // 4. 自定义组件校验需要支持v-model，而且使用as指明组件\r\n    const mySchema = {\r\n      // 校验函数规则 : 返回true就是校验成功，否则返回错误提示的字符串\r\n      ...schema\r\n    }\r\n\r\n    // 监听 isMsgLogin，发生改变的时候清空表单\r\n    return { isMsgLogin, form, mySchema }\r\n  }\r\n}\r\n</script>\r\n<style scoped lang=\"less\">\r\n// 账号容器\r\n.account-box {\r\n  .toggle {\r\n    padding: 15px 40px;\r\n    text-align: right;\r\n    a {\r\n      color: @xtxColor;\r\n      i {\r\n        font-size: 14px;\r\n      }\r\n    }\r\n  }\r\n  .form {\r\n    padding: 0 40px;\r\n    &-item {\r\n      margin-bottom: 28px;\r\n      .input {\r\n        position: relative;\r\n        height: 36px;\r\n        > i {\r\n          width: 34px;\r\n          height: 34px;\r\n          background: #cfcdcd;\r\n          color: #fff;\r\n          position: absolute;\r\n          left: 1px;\r\n          top: 1px;\r\n          text-align: center;\r\n          line-height: 34px;\r\n          font-size: 18px;\r\n        }\r\n        input {\r\n          padding-left: 44px;\r\n          border: 1px solid #cfcdcd;\r\n          height: 36px;\r\n          line-height: 36px;\r\n          width: 100%;\r\n          &.error {\r\n            border-color: @priceColor;\r\n          }\r\n          &.active,&:focus {\r\n            border-color: @xtxColor;\r\n          }\r\n        }\r\n        .code {\r\n          position: absolute;\r\n          right: 1px;\r\n          top: 1px;\r\n          text-align: center;\r\n          line-height: 34px;\r\n          font-size: 14px;\r\n          background: #f5f5f5;\r\n          color: #666;\r\n          width: 90px;\r\n          height: 34px;\r\n          cursor: pointer;\r\n        }\r\n      }\r\n      > .error {\r\n        position: absolute;\r\n        font-size: 12px;\r\n        line-height: 28px;\r\n        color: @priceColor;\r\n        i {\r\n          font-size: 14px;\r\n          margin-right: 2px;\r\n        }\r\n      }\r\n    }\r\n    .agree {\r\n      a {\r\n        color: #069;\r\n      }\r\n    }\r\n    .btn {\r\n      display: block;\r\n      width: 100%;\r\n      height: 40px;\r\n      color: #fff;\r\n      text-align: center;\r\n      line-height: 40px;\r\n      background: @xtxColor;\r\n      &.disabled {\r\n        background: #cfcdcd;\r\n      }\r\n    }\r\n  }\r\n  .action {\r\n    padding: 20px 40px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    .url {\r\n      a {\r\n        color: #999;\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","/**\n  * vee-validate v4.0.3\n  * (c) 2020 Abdelrahman Awad\n  * @license MIT\n  */\nimport { inject, getCurrentInstance, unref, computed, onMounted, isRef, watch, onBeforeUnmount, watchEffect, ref, reactive, defineComponent, toRef, resolveDynamicComponent, nextTick, h, provide } from 'vue';\n\nfunction isCallable(fn) {\r\n    return typeof fn === 'function';\r\n}\r\nconst isObject = (obj) => obj !== null && !!obj && typeof obj === 'object' && !Array.isArray(obj);\n\nconst RULES = {};\r\n/**\r\n * Adds a custom validator to the list of validation rules.\r\n */\r\nfunction defineRule(id, validator) {\r\n    // makes sure new rules are properly formatted.\r\n    guardExtend(id, validator);\r\n    RULES[id] = validator;\r\n}\r\n/**\r\n * Gets an already defined rule\r\n */\r\nfunction resolveRule(id) {\r\n    return RULES[id];\r\n}\r\n/**\r\n * Guards from extension violations.\r\n */\r\nfunction guardExtend(id, validator) {\r\n    if (isCallable(validator)) {\r\n        return;\r\n    }\r\n    throw new Error(`Extension Error: The validator '${id}' must be a function.`);\r\n}\n\nfunction isLocator(value) {\r\n    return isCallable(value) && !!value.__locatorRef;\r\n}\r\n/**\r\n * Checks if an tag name is a native HTML tag and not a Vue component\r\n */\r\nfunction isHTMLTag(tag) {\r\n    return ['input', 'textarea', 'select'].includes(tag);\r\n}\r\n/**\r\n * Checks if an input is of type file\r\n */\r\nfunction isFileInput(tag, type) {\r\n    return isHTMLTag(tag) && type === 'file';\r\n}\r\nfunction isYupValidator(value) {\r\n    return !!value && isCallable(value.validate);\r\n}\r\nfunction hasCheckedAttr(type) {\r\n    return type === 'checkbox' || type === 'radio';\r\n}\r\nfunction isIndex(value) {\r\n    return Number(value) >= 0;\r\n}\r\n/**\r\n * True if the value is an empty object or array\r\n */\r\nfunction isEmptyContainer(value) {\r\n    if (Array.isArray(value)) {\r\n        return value.length === 0;\r\n    }\r\n    return isObject(value) && Object.keys(value).length === 0;\r\n}\r\n/**\r\n * Checks if the path opted out of nested fields using `[fieldName]` syntax\r\n */\r\nfunction isNotNestedPath(path) {\r\n    return /^\\[.+\\]$/i.test(path);\r\n}\n\nfunction cleanupNonNestedPath(path) {\r\n    if (isNotNestedPath(path)) {\r\n        return path.replace(/\\[|\\]/gi, '');\r\n    }\r\n    return path;\r\n}\r\n/**\r\n * Gets a nested property value from an object\r\n */\r\nfunction getFromPath(object, path) {\r\n    if (!object) {\r\n        return undefined;\r\n    }\r\n    if (isNotNestedPath(path)) {\r\n        return object[cleanupNonNestedPath(path)];\r\n    }\r\n    return path\r\n        .split(/\\.|\\[(\\d+)\\]/)\r\n        .filter(Boolean)\r\n        .reduce((acc, propKey) => {\r\n        if (acc && propKey in acc) {\r\n            return acc[propKey];\r\n        }\r\n        return undefined;\r\n    }, object);\r\n}\r\n/**\r\n * Sets a nested property value in a path, creates the path properties if it doesn't exist\r\n */\r\nfunction setInPath(object, path, value) {\r\n    if (isNotNestedPath(path)) {\r\n        object[cleanupNonNestedPath(path)] = value;\r\n        return;\r\n    }\r\n    const keys = path.split(/\\.|\\[(\\d+)\\]/).filter(Boolean);\r\n    let acc = object;\r\n    for (let i = 0; i < keys.length; i++) {\r\n        // Last key, set it\r\n        if (i === keys.length - 1) {\r\n            acc[keys[i]] = value;\r\n            return;\r\n        }\r\n        // Key does not exist, create a container for it\r\n        if (!(keys[i] in acc)) {\r\n            // container can be either an object or an array depending on the next key if it exists\r\n            acc[keys[i]] = isIndex(keys[i + 1]) ? [] : {};\r\n        }\r\n        acc = acc[keys[i]];\r\n    }\r\n}\r\nfunction unset(object, key) {\r\n    if (Array.isArray(object) && isIndex(key)) {\r\n        object.splice(Number(key), 1);\r\n        return;\r\n    }\r\n    delete object[key];\r\n}\r\n/**\r\n * Removes a nested property from object\r\n */\r\nfunction unsetPath(object, path) {\r\n    if (isNotNestedPath(path)) {\r\n        delete object[cleanupNonNestedPath(path)];\r\n        return;\r\n    }\r\n    const keys = path.split(/\\.|\\[(\\d+)\\]/).filter(Boolean);\r\n    let acc = object;\r\n    for (let i = 0; i < keys.length; i++) {\r\n        // Last key, unset it\r\n        if (i === keys.length - 1) {\r\n            unset(acc, keys[i]);\r\n            break;\r\n        }\r\n        // Key does not exist, exit\r\n        if (!(keys[i] in acc)) {\r\n            break;\r\n        }\r\n        acc = acc[keys[i]];\r\n    }\r\n    const pathValues = keys.map((_, idx) => {\r\n        return getFromPath(object, keys.slice(0, idx).join('.'));\r\n    });\r\n    for (let i = pathValues.length - 1; i >= 0; i--) {\r\n        if (!isEmptyContainer(pathValues[i])) {\r\n            continue;\r\n        }\r\n        if (i === 0) {\r\n            unset(object, keys[0]);\r\n            continue;\r\n        }\r\n        unset(pathValues[i - 1], keys[i - 1]);\r\n    }\r\n}\r\n/**\r\n * A typed version of Object.keys\r\n */\r\nfunction keysOf(record) {\r\n    return Object.keys(record);\r\n}\r\n// Uses same component provide as its own injections\r\n// Due to changes in https://github.com/vuejs/vue-next/pull/2424\r\nfunction injectWithSelf(symbol, def = undefined) {\r\n    const vm = getCurrentInstance();\r\n    return inject(symbol, (vm === null || vm === void 0 ? void 0 : vm.provides[symbol]) || def);\r\n}\n\nconst isEvent = (evt) => {\r\n    if (!evt) {\r\n        return false;\r\n    }\r\n    if (typeof Event !== 'undefined' && isCallable(Event) && evt instanceof Event) {\r\n        return true;\r\n    }\r\n    // this is for IE\r\n    /* istanbul ignore next */\r\n    if (evt && evt.srcElement) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\nfunction normalizeEventValue(value) {\r\n    if (!isEvent(value)) {\r\n        return value;\r\n    }\r\n    const input = value.target;\r\n    // Vue sets the current bound value on `_value` prop\r\n    // for checkboxes it it should fetch the value binding type as is (boolean instead of string)\r\n    if (hasCheckedAttr(input.type) && '_value' in input) {\r\n        return input._value;\r\n    }\r\n    if (input.type === 'file' && input.files) {\r\n        return Array.from(input.files);\r\n    }\r\n    return input.value;\r\n}\n\n/**\r\n * Normalizes the given rules expression.\r\n */\r\nfunction normalizeRules(rules) {\r\n    // if falsy value return an empty object.\r\n    const acc = {};\r\n    Object.defineProperty(acc, '_$$isNormalized', {\r\n        value: true,\r\n        writable: false,\r\n        enumerable: false,\r\n        configurable: false,\r\n    });\r\n    if (!rules) {\r\n        return acc;\r\n    }\r\n    // If its a single validate function or a yup fn, leave as is.\r\n    if (isCallable(rules) || isYupValidator(rules)) {\r\n        return rules;\r\n    }\r\n    // Object is already normalized, skip.\r\n    if (isObject(rules) && rules._$$isNormalized) {\r\n        return rules;\r\n    }\r\n    if (isObject(rules)) {\r\n        return Object.keys(rules).reduce((prev, curr) => {\r\n            const params = normalizeParams(rules[curr]);\r\n            if (rules[curr] !== false) {\r\n                prev[curr] = buildParams(params);\r\n            }\r\n            return prev;\r\n        }, acc);\r\n    }\r\n    /* istanbul ignore if */\r\n    if (typeof rules !== 'string') {\r\n        return acc;\r\n    }\r\n    return rules.split('|').reduce((prev, rule) => {\r\n        const parsedRule = parseRule(rule);\r\n        if (!parsedRule.name) {\r\n            return prev;\r\n        }\r\n        prev[parsedRule.name] = buildParams(parsedRule.params);\r\n        return prev;\r\n    }, acc);\r\n}\r\n/**\r\n * Normalizes a rule param.\r\n */\r\nfunction normalizeParams(params) {\r\n    if (params === true) {\r\n        return [];\r\n    }\r\n    if (Array.isArray(params)) {\r\n        return params;\r\n    }\r\n    if (isObject(params)) {\r\n        return params;\r\n    }\r\n    return [params];\r\n}\r\nfunction buildParams(provided) {\r\n    const mapValueToLocator = (value) => {\r\n        // A target param using interpolation\r\n        if (typeof value === 'string' && value[0] === '@') {\r\n            return createLocator(value.slice(1));\r\n        }\r\n        return value;\r\n    };\r\n    if (Array.isArray(provided)) {\r\n        return provided.map(mapValueToLocator);\r\n    }\r\n    return Object.keys(provided).reduce((prev, key) => {\r\n        prev[key] = mapValueToLocator(provided[key]);\r\n        return prev;\r\n    }, {});\r\n}\r\n/**\r\n * Parses a rule string expression.\r\n */\r\nconst parseRule = (rule) => {\r\n    let params = [];\r\n    const name = rule.split(':')[0];\r\n    if (rule.includes(':')) {\r\n        params = rule.split(':').slice(1).join(':').split(',');\r\n    }\r\n    return { name, params };\r\n};\r\nfunction createLocator(value) {\r\n    const locator = (crossTable) => {\r\n        const val = crossTable[value];\r\n        return val;\r\n    };\r\n    locator.__locatorRef = value;\r\n    return locator;\r\n}\r\nfunction extractLocators(params) {\r\n    if (Array.isArray(params)) {\r\n        return params.filter(isLocator);\r\n    }\r\n    return Object.keys(params)\r\n        .filter(key => isLocator(params[key]))\r\n        .map(key => params[key]);\r\n}\n\nconst normalizeChildren = (context, slotProps) => {\r\n    if (!context.slots.default) {\r\n        return context.slots.default;\r\n    }\r\n    return context.slots.default(slotProps);\r\n};\n\nconst DEFAULT_CONFIG = {\r\n    generateMessage: ({ field }) => `${field} is not valid.`,\r\n    bails: true,\r\n    validateOnBlur: true,\r\n    validateOnChange: true,\r\n    validateOnInput: false,\r\n    validateOnModelUpdate: true,\r\n};\r\nlet currentConfig = Object.assign({}, DEFAULT_CONFIG);\r\nconst getConfig = () => currentConfig;\r\nconst setConfig = (newConf) => {\r\n    currentConfig = Object.assign(Object.assign({}, currentConfig), newConf);\r\n};\r\nconst configure = setConfig;\n\n/**\r\n * Validates a value against the rules.\r\n */\r\nasync function validate(value, rules, options = {}) {\r\n    const shouldBail = options === null || options === void 0 ? void 0 : options.bails;\r\n    const field = {\r\n        name: (options === null || options === void 0 ? void 0 : options.name) || '{field}',\r\n        rules: normalizeRules(rules),\r\n        bails: shouldBail !== null && shouldBail !== void 0 ? shouldBail : true,\r\n        formData: (options === null || options === void 0 ? void 0 : options.values) || {},\r\n    };\r\n    const result = await _validate(field, value);\r\n    const errors = result.errors;\r\n    return {\r\n        errors,\r\n    };\r\n}\r\n/**\r\n * Starts the validation process.\r\n */\r\nasync function _validate(field, value) {\r\n    if (isYupValidator(field.rules)) {\r\n        return validateFieldWithYup(field, value);\r\n    }\r\n    // if a generic function, use it as the pipeline.\r\n    if (isCallable(field.rules)) {\r\n        const result = await field.rules(value, {\r\n            field: field.name,\r\n            form: field.formData,\r\n        });\r\n        const isValid = typeof result !== 'string' && result;\r\n        const message = typeof result === 'string'\r\n            ? result\r\n            : _generateFieldError({\r\n                field: field.name,\r\n                value,\r\n                form: field.formData,\r\n            });\r\n        return {\r\n            errors: !isValid ? [message] : [],\r\n        };\r\n    }\r\n    const errors = [];\r\n    const rules = Object.keys(field.rules);\r\n    const length = rules.length;\r\n    for (let i = 0; i < length; i++) {\r\n        const rule = rules[i];\r\n        const result = await _test(field, value, {\r\n            name: rule,\r\n            params: field.rules[rule],\r\n        });\r\n        if (result.error) {\r\n            errors.push(result.error);\r\n            if (field.bails) {\r\n                return {\r\n                    errors,\r\n                };\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        errors,\r\n    };\r\n}\r\n/**\r\n * Handles yup validation\r\n */\r\nasync function validateFieldWithYup(field, value) {\r\n    const errors = await field.rules\r\n        .validate(value, {\r\n        abortEarly: field.bails,\r\n    })\r\n        .then(() => [])\r\n        .catch((err) => {\r\n        // Yup errors have a name prop one them.\r\n        // https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\r\n        if (err.name === 'ValidationError') {\r\n            return err.errors;\r\n        }\r\n        // re-throw the error so we don't hide it\r\n        throw err;\r\n    });\r\n    return {\r\n        errors,\r\n    };\r\n}\r\n/**\r\n * Tests a single input value against a rule.\r\n */\r\nasync function _test(field, value, rule) {\r\n    const validator = resolveRule(rule.name);\r\n    if (!validator) {\r\n        throw new Error(`No such validator '${rule.name}' exists.`);\r\n    }\r\n    const params = fillTargetValues(rule.params, field.formData);\r\n    const ctx = {\r\n        field: field.name,\r\n        value,\r\n        form: field.formData,\r\n        rule,\r\n    };\r\n    const result = await validator(value, params, ctx);\r\n    if (typeof result === 'string') {\r\n        return {\r\n            error: result,\r\n        };\r\n    }\r\n    return {\r\n        error: result ? undefined : _generateFieldError(ctx),\r\n    };\r\n}\r\n/**\r\n * Generates error messages.\r\n */\r\nfunction _generateFieldError(fieldCtx) {\r\n    const message = getConfig().generateMessage;\r\n    if (!message) {\r\n        return 'Field is invalid';\r\n    }\r\n    return message(fieldCtx);\r\n}\r\nfunction fillTargetValues(params, crossTable) {\r\n    const normalize = (value) => {\r\n        if (isLocator(value)) {\r\n            return value(crossTable);\r\n        }\r\n        return value;\r\n    };\r\n    if (Array.isArray(params)) {\r\n        return params.map(normalize);\r\n    }\r\n    return Object.keys(params).reduce((acc, param) => {\r\n        acc[param] = normalize(params[param]);\r\n        return acc;\r\n    }, {});\r\n}\n\nconst FormSymbol = Symbol('vee-validate-form');\r\nconst FormErrorsSymbol = Symbol('vee-validate-form-errors');\r\nconst FormInitialValues = Symbol('vee-validate-form-initial-values');\n\nlet ID_COUNTER = 0;\r\n/**\r\n * Creates a field composite.\r\n */\r\nfunction useField(name, rules, opts) {\r\n    const fid = ID_COUNTER >= Number.MAX_SAFE_INTEGER ? 0 : ++ID_COUNTER;\r\n    const { initialValue, validateOnMount, bails, type, valueProp, label, validateOnValueUpdate } = normalizeOptions(unref(name), opts);\r\n    const form = injectWithSelf(FormSymbol);\r\n    const { meta, errors, handleBlur, handleInput, resetValidationState, setValidationState, value, checked, } = useValidationState({\r\n        name,\r\n        // make sure to unref initial value because of possible refs passed in\r\n        initValue: unref(initialValue),\r\n        form,\r\n        type,\r\n        valueProp,\r\n    });\r\n    const nonYupSchemaRules = extractRuleFromSchema(form === null || form === void 0 ? void 0 : form.schema, unref(name));\r\n    const normalizedRules = computed(() => {\r\n        return normalizeRules(nonYupSchemaRules || unref(rules));\r\n    });\r\n    const validate$1 = async () => {\r\n        var _a;\r\n        meta.pending = true;\r\n        let result;\r\n        if (!form || !form.validateSchema) {\r\n            result = await validate(value.value, normalizedRules.value, {\r\n                name: unref(label) || unref(name),\r\n                values: (_a = form === null || form === void 0 ? void 0 : form.values) !== null && _a !== void 0 ? _a : {},\r\n                bails,\r\n            });\r\n        }\r\n        else {\r\n            result = (await form.validateSchema())[unref(name)];\r\n        }\r\n        meta.pending = false;\r\n        return setValidationState(result);\r\n    };\r\n    // Common input/change event handler\r\n    const handleChange = (e) => {\r\n        var _a, _b;\r\n        if (checked && checked.value === ((_b = (_a = e) === null || _a === void 0 ? void 0 : _a.target) === null || _b === void 0 ? void 0 : _b.checked)) {\r\n            return;\r\n        }\r\n        value.value = normalizeEventValue(e);\r\n        meta.dirty = true;\r\n        if (!validateOnValueUpdate) {\r\n            return validate$1();\r\n        }\r\n    };\r\n    if (validateOnMount) {\r\n        onMounted(validate$1);\r\n    }\r\n    const errorMessage = computed(() => {\r\n        return errors.value[0];\r\n    });\r\n    function setTouched(isTouched) {\r\n        meta.touched = isTouched;\r\n    }\r\n    function setDirty(isDirty) {\r\n        meta.dirty = isDirty;\r\n    }\r\n    let unwatchValue;\r\n    function watchValue() {\r\n        if (validateOnValueUpdate) {\r\n            unwatchValue = watch(value, validate$1, {\r\n                deep: true,\r\n            });\r\n        }\r\n    }\r\n    watchValue();\r\n    function resetField(state) {\r\n        unwatchValue === null || unwatchValue === void 0 ? void 0 : unwatchValue();\r\n        resetValidationState(state);\r\n        watchValue();\r\n    }\r\n    const field = {\r\n        fid,\r\n        name,\r\n        value: value,\r\n        meta,\r\n        errors,\r\n        errorMessage,\r\n        type,\r\n        valueProp,\r\n        checked,\r\n        idx: -1,\r\n        resetField,\r\n        handleReset: () => resetField(),\r\n        validate: validate$1,\r\n        handleChange,\r\n        handleBlur,\r\n        handleInput,\r\n        setValidationState,\r\n        setTouched,\r\n        setDirty,\r\n    };\r\n    if (isRef(rules) && typeof unref(rules) !== 'function') {\r\n        watch(rules, validate$1, {\r\n            deep: true,\r\n        });\r\n    }\r\n    // if no associated form return the field API immediately\r\n    if (!form) {\r\n        return field;\r\n    }\r\n    // associate the field with the given form\r\n    form.register(field);\r\n    onBeforeUnmount(() => {\r\n        form.unregister(field);\r\n    });\r\n    // extract cross-field dependencies in a computed prop\r\n    const dependencies = computed(() => {\r\n        const rulesVal = normalizedRules.value;\r\n        // is falsy, a function schema or a yup schema\r\n        if (!rulesVal || isCallable(rulesVal) || isCallable(rulesVal.validate)) {\r\n            return [];\r\n        }\r\n        return Object.keys(rulesVal).reduce((acc, rule) => {\r\n            const deps = extractLocators(normalizedRules.value[rule]).map((dep) => dep.__locatorRef);\r\n            acc.push(...deps);\r\n            return acc;\r\n        }, []);\r\n    });\r\n    // Adds a watcher that runs the validation whenever field dependencies change\r\n    watchEffect(() => {\r\n        // Skip if no dependencies\r\n        if (!dependencies.value.length) {\r\n            return;\r\n        }\r\n        // For each dependent field, validate it if it was validated before\r\n        dependencies.value.forEach(dep => {\r\n            if (dep in form.values && meta.dirty) {\r\n                return validate$1();\r\n            }\r\n        });\r\n    });\r\n    return field;\r\n}\r\n/**\r\n * Normalizes partial field options to include the full\r\n */\r\nfunction normalizeOptions(name, opts) {\r\n    const defaults = () => ({\r\n        initialValue: undefined,\r\n        validateOnMount: false,\r\n        bails: true,\r\n        rules: '',\r\n        label: name,\r\n        validateOnValueUpdate: true,\r\n    });\r\n    if (!opts) {\r\n        return defaults();\r\n    }\r\n    return Object.assign(Object.assign({}, defaults()), (opts || {}));\r\n}\r\n/**\r\n * Manages the validation state of a field.\r\n */\r\nfunction useValidationState({ name, initValue, form, type, valueProp, }) {\r\n    var _a;\r\n    const errors = ref([]);\r\n    const formInitialValues = injectWithSelf(FormInitialValues, undefined);\r\n    const initialValue = (_a = getFromPath(unref(formInitialValues), unref(name))) !== null && _a !== void 0 ? _a : initValue;\r\n    const { resetMeta, meta } = useMeta(initialValue);\r\n    const value = useFieldValue(initialValue, name, form);\r\n    if (hasCheckedAttr(type) && initialValue) {\r\n        value.value = initialValue;\r\n    }\r\n    const checked = hasCheckedAttr(type)\r\n        ? computed(() => {\r\n            if (Array.isArray(value.value)) {\r\n                return value.value.includes(unref(valueProp));\r\n            }\r\n            return unref(valueProp) === value.value;\r\n        })\r\n        : undefined;\r\n    if (checked === undefined || checked.value) {\r\n        // Set the value without triggering the watcher\r\n        value.value = initialValue;\r\n    }\r\n    /**\r\n     * Handles common onBlur meta update\r\n     */\r\n    const handleBlur = () => {\r\n        meta.touched = true;\r\n    };\r\n    /**\r\n     * Handles common on blur events\r\n     */\r\n    const handleInput = (e) => {\r\n        // Checkboxes/Radio will emit a `change` event anyway, custom components will use `update:modelValue`\r\n        // so this is redundant\r\n        if (!hasCheckedAttr(type)) {\r\n            value.value = normalizeEventValue(e);\r\n        }\r\n        meta.dirty = true;\r\n    };\r\n    // Updates the validation state with the validation result\r\n    function setValidationState(result) {\r\n        errors.value = result.errors;\r\n        meta.valid = !result.errors.length;\r\n        return result;\r\n    }\r\n    // Resets the validation state\r\n    function resetValidationState(state) {\r\n        var _a;\r\n        value.value =\r\n            state && 'value' in state ? state.value : (_a = getFromPath(unref(formInitialValues), unref(name))) !== null && _a !== void 0 ? _a : initValue;\r\n        errors.value = (state === null || state === void 0 ? void 0 : state.errors) || [];\r\n        resetMeta(state);\r\n    }\r\n    return {\r\n        meta,\r\n        errors,\r\n        setValidationState,\r\n        resetValidationState,\r\n        handleBlur,\r\n        handleInput,\r\n        value,\r\n        checked,\r\n    };\r\n}\r\n/**\r\n * Exposes meta flags state and some associated actions with them.\r\n */\r\nfunction useMeta(initialValue) {\r\n    const initialMeta = () => ({\r\n        touched: false,\r\n        dirty: false,\r\n        valid: false,\r\n        pending: false,\r\n        initialValue,\r\n    });\r\n    const meta = reactive(initialMeta());\r\n    /**\r\n     * Resets the flag state\r\n     */\r\n    function resetMeta(state) {\r\n        var _a, _b, _c;\r\n        const defaults = initialMeta();\r\n        meta.pending = defaults.pending;\r\n        meta.touched = (_a = state === null || state === void 0 ? void 0 : state.touched) !== null && _a !== void 0 ? _a : defaults.touched;\r\n        meta.dirty = (_b = state === null || state === void 0 ? void 0 : state.dirty) !== null && _b !== void 0 ? _b : defaults.dirty;\r\n        meta.initialValue = (_c = state === null || state === void 0 ? void 0 : state.value) !== null && _c !== void 0 ? _c : defaults.initialValue;\r\n    }\r\n    return {\r\n        meta,\r\n        resetMeta,\r\n    };\r\n}\r\n/**\r\n * Extracts the validation rules from a schema\r\n */\r\nfunction extractRuleFromSchema(schema, fieldName) {\r\n    // no schema at all\r\n    if (!schema) {\r\n        return undefined;\r\n    }\r\n    // there is a key on the schema object for this field\r\n    return schema[fieldName];\r\n}\r\n/**\r\n * Manages the field value\r\n */\r\nfunction useFieldValue(initialValue, path, form) {\r\n    // if no form is associated, use a regular ref.\r\n    if (!form) {\r\n        return ref(initialValue);\r\n    }\r\n    // set initial value\r\n    setInPath(form.values, unref(path), initialValue);\r\n    // otherwise use a computed setter that triggers the `setFieldValue`\r\n    const value = computed({\r\n        get() {\r\n            return getFromPath(form.values, unref(path));\r\n        },\r\n        set(newVal) {\r\n            form.setFieldValue(unref(path), newVal);\r\n        },\r\n    });\r\n    return value;\r\n}\n\nconst Field = defineComponent({\r\n    name: 'Field',\r\n    inheritAttrs: false,\r\n    props: {\r\n        as: {\r\n            type: [String, Object],\r\n            default: undefined,\r\n        },\r\n        name: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        rules: {\r\n            type: [Object, String, Function],\r\n            default: null,\r\n        },\r\n        validateOnMount: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        bails: {\r\n            type: Boolean,\r\n            default: () => getConfig().bails,\r\n        },\r\n        label: {\r\n            type: String,\r\n            default: undefined,\r\n        },\r\n    },\r\n    setup(props, ctx) {\r\n        const rules = toRef(props, 'rules');\r\n        const name = toRef(props, 'name');\r\n        const label = toRef(props, 'label');\r\n        const { errors, value, errorMessage, validate: validateField, handleChange, handleBlur, handleInput, setDirty, setTouched, resetField, handleReset, meta, checked, } = useField(name, rules, {\r\n            validateOnMount: props.validateOnMount,\r\n            bails: props.bails,\r\n            type: ctx.attrs.type,\r\n            // Gets the initial value either from `value` prop/attr or `v-model` binding (modelValue)\r\n            // For checkboxes and radio buttons it will always be the model value not the `value` attribute\r\n            initialValue: hasCheckedAttr(ctx.attrs.type)\r\n                ? ctx.attrs.modelValue\r\n                : 'modelValue' in ctx.attrs\r\n                    ? ctx.attrs.modelValue\r\n                    : ctx.attrs.value,\r\n            // Only for checkboxes and radio buttons\r\n            valueProp: ctx.attrs.value,\r\n            label,\r\n            validateOnValueUpdate: false,\r\n        });\r\n        let isDuringValueTick = false;\r\n        // Prevents re-render updates that rests value when using v-model (#2941)\r\n        function valueTick() {\r\n            isDuringValueTick = true;\r\n            nextTick(() => {\r\n                isDuringValueTick = false;\r\n            });\r\n        }\r\n        // If there is a v-model applied on the component we need to emit the `update:modelValue` whenever the value binding changes\r\n        const onChangeHandler = 'modelValue' in ctx.attrs\r\n            ? function handleChangeWithModel(e) {\r\n                handleChange(e);\r\n                ctx.emit('update:modelValue', value.value);\r\n            }\r\n            : handleChange;\r\n        const onInputHandler = 'modelValue' in ctx.attrs\r\n            ? function handleChangeWithModel(e) {\r\n                handleInput(e);\r\n                ctx.emit('update:modelValue', value.value);\r\n            }\r\n            : handleInput;\r\n        const { validateOnInput, validateOnChange, validateOnBlur, validateOnModelUpdate } = getConfig();\r\n        const baseOnBlur = [handleBlur, ctx.attrs.onBlur, validateOnBlur ? validateField : undefined].filter(Boolean);\r\n        const baseOnInput = [\r\n            onInputHandler,\r\n            valueTick,\r\n            validateOnInput ? onChangeHandler : undefined,\r\n            ctx.attrs.onInput,\r\n        ].filter(Boolean);\r\n        const baseOnChange = [\r\n            onInputHandler,\r\n            valueTick,\r\n            validateOnChange ? onChangeHandler : undefined,\r\n            ctx.attrs.onChange,\r\n        ].filter(Boolean);\r\n        const makeSlotProps = () => {\r\n            const fieldProps = {\r\n                name: props.name,\r\n                onBlur: baseOnBlur,\r\n                onInput: baseOnInput,\r\n                onChange: baseOnChange,\r\n            };\r\n            if (validateOnModelUpdate) {\r\n                fieldProps['onUpdate:modelValue'] = [onChangeHandler, valueTick];\r\n            }\r\n            if (hasCheckedAttr(ctx.attrs.type) && checked) {\r\n                fieldProps.checked = checked.value;\r\n            }\r\n            else {\r\n                fieldProps.value = value.value;\r\n            }\r\n            if (isFileInput(resolveTag(props, ctx), ctx.attrs.type)) {\r\n                delete fieldProps.value;\r\n            }\r\n            return {\r\n                field: fieldProps,\r\n                meta,\r\n                errors: errors.value,\r\n                errorMessage: errorMessage.value,\r\n                validate: validateField,\r\n                resetField,\r\n                handleChange: onChangeHandler,\r\n                handleInput: onInputHandler,\r\n                handleReset,\r\n                handleBlur,\r\n                setDirty,\r\n                setTouched,\r\n            };\r\n        };\r\n        return () => {\r\n            const tag = resolveDynamicComponent(resolveTag(props, ctx));\r\n            const slotProps = makeSlotProps();\r\n            // Sync the model value with the inner field value if they mismatch\r\n            // a simple string comparison is used here\r\n            // make sure to check if the re-render isn't caused by a value update tick\r\n            if ('modelValue' in ctx.attrs && String(ctx.attrs.modelValue) !== String(value.value) && !isDuringValueTick) {\r\n                nextTick(() => {\r\n                    handleChange(ctx.attrs.modelValue);\r\n                });\r\n            }\r\n            const children = normalizeChildren(ctx, slotProps);\r\n            if (tag) {\r\n                return h(tag, Object.assign(Object.assign({}, ctx.attrs), slotProps.field), children);\r\n            }\r\n            return children;\r\n        };\r\n    },\r\n});\r\nfunction resolveTag(props, ctx) {\r\n    let tag = props.as || '';\r\n    if (!props.as && !ctx.slots.default) {\r\n        tag = 'input';\r\n    }\r\n    return tag;\r\n}\n\nfunction useForm(opts) {\r\n    // A flat array containing field references\r\n    const fields = ref([]);\r\n    // If the form is currently submitting\r\n    const isSubmitting = ref(false);\r\n    // a field map object useful for faster access of fields\r\n    const fieldsById = computed(() => {\r\n        return fields.value.reduce((acc, field) => {\r\n            // if the field was not added before\r\n            if (!acc[field.name]) {\r\n                acc[field.name] = field;\r\n                field.idx = -1;\r\n                return acc;\r\n            }\r\n            // if the same name is detected\r\n            if (!Array.isArray(acc[field.name])) {\r\n                const firstField = acc[field.name];\r\n                firstField.idx = 0;\r\n                acc[field.name] = [firstField];\r\n            }\r\n            field.idx = acc[field.name].length;\r\n            acc[field.name].push(field);\r\n            return acc;\r\n        }, {});\r\n    });\r\n    // a private ref for all form values\r\n    const formValues = reactive({});\r\n    // a lookup to keep track of values by their field ids\r\n    // this is important because later we need it if fields swap names\r\n    const valuesByFid = {};\r\n    // an aggregation of field errors in a map object\r\n    const errors = computed(() => {\r\n        return fields.value.reduce((acc, field) => {\r\n            // Check if its a grouped field (checkbox/radio)\r\n            let message;\r\n            if (Array.isArray(fieldsById.value[field.name])) {\r\n                const group = fieldsById.value[field.name];\r\n                message = unref((group.find((f) => unref(f.checked)) || field).errorMessage);\r\n            }\r\n            else {\r\n                message = unref(field.errorMessage);\r\n            }\r\n            if (message) {\r\n                acc[field.name] = message;\r\n            }\r\n            return acc;\r\n        }, {});\r\n    });\r\n    // initial form values\r\n    const { initialValues, setInitialValues } = useFormInitialValues(fieldsById, formValues, opts === null || opts === void 0 ? void 0 : opts.initialValues);\r\n    // form meta aggregations\r\n    const meta = useFormMeta(fields, initialValues);\r\n    /**\r\n     * Manually sets an error message on a specific field\r\n     */\r\n    function setFieldError(field, message) {\r\n        const fieldInstance = fieldsById.value[field];\r\n        if (!fieldInstance) {\r\n            return;\r\n        }\r\n        if (Array.isArray(fieldInstance)) {\r\n            fieldInstance.forEach(instance => {\r\n                instance.setValidationState({ errors: message ? [message] : [] });\r\n            });\r\n            return;\r\n        }\r\n        fieldInstance.setValidationState({ errors: message ? [message] : [] });\r\n    }\r\n    /**\r\n     * Sets errors for the fields specified in the object\r\n     */\r\n    function setErrors(fields) {\r\n        keysOf(fields).forEach(field => {\r\n            setFieldError(field, fields[field]);\r\n        });\r\n    }\r\n    /**\r\n     * Sets a single field value\r\n     */\r\n    function setFieldValue(field, value) {\r\n        var _a;\r\n        const fieldInstance = fieldsById.value[field];\r\n        // Multiple checkboxes, and only one of them got updated\r\n        if (Array.isArray(fieldInstance) && ((_a = fieldInstance[0]) === null || _a === void 0 ? void 0 : _a.type) === 'checkbox' && !Array.isArray(value)) {\r\n            const oldVal = getFromPath(formValues, field);\r\n            const newVal = Array.isArray(oldVal) ? [...oldVal] : [];\r\n            const idx = newVal.indexOf(value);\r\n            idx >= 0 ? newVal.splice(idx, 1) : newVal.push(value);\r\n            setInPath(formValues, field, newVal);\r\n            fieldInstance.forEach(fieldItem => {\r\n                valuesByFid[fieldItem.fid] = newVal;\r\n            });\r\n            return;\r\n        }\r\n        let newValue = value;\r\n        // Single Checkbox\r\n        if ((fieldInstance === null || fieldInstance === void 0 ? void 0 : fieldInstance.type) === 'checkbox') {\r\n            newValue = getFromPath(formValues, field) === value ? undefined : value;\r\n        }\r\n        setInPath(formValues, field, newValue);\r\n        if (fieldInstance) {\r\n            valuesByFid[fieldInstance.fid] = newValue;\r\n        }\r\n    }\r\n    /**\r\n     * Sets multiple fields values\r\n     */\r\n    function setValues(fields) {\r\n        keysOf(fields).forEach(field => {\r\n            setFieldValue(field, fields[field]);\r\n        });\r\n    }\r\n    /**\r\n     * Sets the touched meta state on a field\r\n     */\r\n    function setFieldTouched(field, isTouched) {\r\n        const fieldInstance = fieldsById.value[field];\r\n        if (!fieldInstance) {\r\n            return;\r\n        }\r\n        if (Array.isArray(fieldInstance)) {\r\n            fieldInstance.forEach(f => f.setTouched(isTouched));\r\n            return;\r\n        }\r\n        fieldInstance.setTouched(isTouched);\r\n    }\r\n    /**\r\n     * Sets the touched meta state on multiple fields\r\n     */\r\n    function setTouched(fields) {\r\n        keysOf(fields).forEach(field => {\r\n            setFieldTouched(field, !!fields[field]);\r\n        });\r\n    }\r\n    /**\r\n     * Sets the dirty meta state on a field\r\n     */\r\n    function setFieldDirty(field, isDirty) {\r\n        const fieldInstance = fieldsById.value[field];\r\n        if (!fieldInstance) {\r\n            return;\r\n        }\r\n        if (Array.isArray(fieldInstance)) {\r\n            fieldInstance.forEach(f => f.setDirty(isDirty));\r\n            return;\r\n        }\r\n        fieldInstance.setDirty(isDirty);\r\n    }\r\n    /**\r\n     * Sets the dirty meta state on multiple fields\r\n     */\r\n    function setDirty(fields) {\r\n        keysOf(fields).forEach(field => {\r\n            setFieldDirty(field, !!fields[field]);\r\n        });\r\n    }\r\n    /**\r\n     * Resets all fields\r\n     */\r\n    const resetForm = (state) => {\r\n        // set initial values if provided\r\n        if (state === null || state === void 0 ? void 0 : state.values) {\r\n            setInitialValues(state.values);\r\n        }\r\n        // Reset all fields state\r\n        fields.value.forEach((f) => f.resetField());\r\n        // set explicit state afterwards\r\n        if (state === null || state === void 0 ? void 0 : state.dirty) {\r\n            setDirty(state.dirty);\r\n        }\r\n        if (state === null || state === void 0 ? void 0 : state.touched) {\r\n            setTouched(state.touched);\r\n        }\r\n        if (state === null || state === void 0 ? void 0 : state.errors) {\r\n            setErrors(state.errors);\r\n        }\r\n    };\r\n    function registerField(field) {\r\n        fields.value.push(field);\r\n        if (isRef(field.name)) {\r\n            // ensures when a field's name was already taken that it preserves its same value\r\n            // necessary for fields generated by loops\r\n            watch(field.name, newPath => {\r\n                setFieldValue(newPath, valuesByFid[field.fid]);\r\n            }, {\r\n                flush: 'post',\r\n            });\r\n        }\r\n    }\r\n    function unregisterField(field) {\r\n        var _a, _b;\r\n        const idx = fields.value.indexOf(field);\r\n        if (idx === -1) {\r\n            return;\r\n        }\r\n        fields.value.splice(idx, 1);\r\n        const fid = field.fid;\r\n        // cleans up the field value from fid lookup\r\n        nextTick(() => {\r\n            delete valuesByFid[fid];\r\n        });\r\n        const fieldName = unref(field.name);\r\n        // in this case, this is a single field not a group (checkbox or radio)\r\n        // so remove the field value key immediately\r\n        if (field.idx === -1) {\r\n            unsetPath(formValues, fieldName);\r\n            return;\r\n        }\r\n        // otherwise find the actual value in the current array of values and remove it\r\n        const valueIdx = (_b = (_a = getFromPath(formValues, fieldName)) === null || _a === void 0 ? void 0 : _a.indexOf) === null || _b === void 0 ? void 0 : _b.call(_a, unref(field.valueProp));\r\n        if (valueIdx === undefined) {\r\n            unsetPath(formValues, fieldName);\r\n            return;\r\n        }\r\n        if (valueIdx === -1) {\r\n            return;\r\n        }\r\n        if (Array.isArray(formValues[fieldName])) {\r\n            unsetPath(formValues, `${fieldName}.${valueIdx}`);\r\n            return;\r\n        }\r\n        unsetPath(formValues, fieldName);\r\n    }\r\n    const formCtx = {\r\n        register: registerField,\r\n        unregister: unregisterField,\r\n        fields: fieldsById,\r\n        values: formValues,\r\n        schema: opts === null || opts === void 0 ? void 0 : opts.validationSchema,\r\n        validateSchema: isYupValidator(opts === null || opts === void 0 ? void 0 : opts.validationSchema)\r\n            ? (shouldMutate = false) => {\r\n                return validateYupSchema(formCtx, shouldMutate);\r\n            }\r\n            : undefined,\r\n        setFieldValue,\r\n        setValues,\r\n        setErrors,\r\n        setFieldError,\r\n        setFieldTouched,\r\n        setTouched,\r\n        setFieldDirty,\r\n        setDirty,\r\n        resetForm,\r\n    };\r\n    const validate = async () => {\r\n        if (formCtx.validateSchema) {\r\n            return formCtx.validateSchema(true).then(results => {\r\n                return Object.keys(results).every(r => !results[r].errors.length);\r\n            });\r\n        }\r\n        const results = await Promise.all(fields.value.map((f) => {\r\n            return f.validate();\r\n        }));\r\n        return results.every(r => !r.errors.length);\r\n    };\r\n    const immutableFormValues = computed(() => {\r\n        return fields.value.reduce((formData, field) => {\r\n            setInPath(formData, field.name, unref(field.value));\r\n            return formData;\r\n        }, {});\r\n    });\r\n    const handleSubmit = (fn) => {\r\n        return function submissionHandler(e) {\r\n            if (e instanceof Event) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n            isSubmitting.value = true;\r\n            return validate()\r\n                .then(result => {\r\n                if (result && typeof fn === 'function') {\r\n                    return fn(immutableFormValues.value, {\r\n                        evt: e,\r\n                        setDirty,\r\n                        setFieldDirty,\r\n                        setErrors,\r\n                        setFieldError,\r\n                        setTouched,\r\n                        setFieldTouched,\r\n                        setValues,\r\n                        setFieldValue,\r\n                        resetForm,\r\n                    });\r\n                }\r\n            })\r\n                .then(() => {\r\n                isSubmitting.value = false;\r\n            }, err => {\r\n                isSubmitting.value = false;\r\n                // re-throw the err so it doesn't go silent\r\n                throw err;\r\n            });\r\n        };\r\n    };\r\n    const submitForm = handleSubmit((_, { evt }) => {\r\n        var _a;\r\n        if (evt) {\r\n            (_a = evt === null || evt === void 0 ? void 0 : evt.target) === null || _a === void 0 ? void 0 : _a.submit();\r\n        }\r\n    });\r\n    // Trigger initial validation\r\n    onMounted(() => {\r\n        if (opts === null || opts === void 0 ? void 0 : opts.initialErrors) {\r\n            setErrors(opts.initialErrors);\r\n        }\r\n        if (opts === null || opts === void 0 ? void 0 : opts.initialDirty) {\r\n            setDirty(opts.initialDirty);\r\n        }\r\n        if (opts === null || opts === void 0 ? void 0 : opts.initialTouched) {\r\n            setTouched(opts.initialTouched);\r\n        }\r\n        if (opts === null || opts === void 0 ? void 0 : opts.validateOnMount) {\r\n            validate();\r\n        }\r\n    });\r\n    // Provide injections\r\n    provide(FormSymbol, formCtx);\r\n    provide(FormErrorsSymbol, errors);\r\n    return {\r\n        errors,\r\n        meta,\r\n        values: formValues,\r\n        validate,\r\n        isSubmitting,\r\n        handleReset: () => resetForm(),\r\n        resetForm,\r\n        handleSubmit,\r\n        submitForm,\r\n        setFieldError,\r\n        setErrors,\r\n        setFieldValue,\r\n        setValues,\r\n        setFieldTouched,\r\n        setTouched,\r\n        setFieldDirty,\r\n        setDirty,\r\n    };\r\n}\r\n/**\r\n * Manages form meta aggregation\r\n */\r\nfunction useFormMeta(fields, initialValues) {\r\n    const MERGE_STRATEGIES = {\r\n        valid: 'every',\r\n        dirty: 'some',\r\n        touched: 'some',\r\n        pending: 'some',\r\n    };\r\n    return computed(() => {\r\n        const flags = keysOf(MERGE_STRATEGIES).reduce((acc, flag) => {\r\n            const mergeMethod = MERGE_STRATEGIES[flag];\r\n            acc[flag] = fields.value[mergeMethod](field => field.meta[flag]);\r\n            return acc;\r\n        }, {});\r\n        return Object.assign({ initialValues: unref(initialValues) }, flags);\r\n    });\r\n}\r\nasync function validateYupSchema(form, shouldMutate = false) {\r\n    const errors = await form.schema\r\n        .validate(form.values, { abortEarly: false })\r\n        .then(() => [])\r\n        .catch((err) => {\r\n        // Yup errors have a name prop one them.\r\n        // https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\r\n        if (err.name !== 'ValidationError') {\r\n            throw err;\r\n        }\r\n        // list of aggregated errors\r\n        return err.inner || [];\r\n    });\r\n    const fields = form.fields.value;\r\n    const errorsByPath = errors.reduce((acc, err) => {\r\n        acc[err.path] = err;\r\n        return acc;\r\n    }, {});\r\n    // Aggregates the validation result\r\n    const aggregatedResult = keysOf(fields).reduce((result, fieldId) => {\r\n        const field = fields[fieldId];\r\n        const messages = (errorsByPath[fieldId] || { errors: [] }).errors;\r\n        const fieldResult = {\r\n            errors: messages,\r\n        };\r\n        result[fieldId] = fieldResult;\r\n        const isGroup = Array.isArray(field);\r\n        const isDirty = isGroup ? field.some((f) => f.meta.dirty) : field.meta.dirty;\r\n        if (!shouldMutate && !isDirty) {\r\n            return result;\r\n        }\r\n        if (isGroup) {\r\n            field.forEach((f) => f.setValidationState(fieldResult));\r\n            return result;\r\n        }\r\n        field.setValidationState(fieldResult);\r\n        return result;\r\n    }, {});\r\n    return aggregatedResult;\r\n}\r\n/**\r\n * Manages the initial values prop\r\n */\r\nfunction useFormInitialValues(fields, formValues, providedValues) {\r\n    const initialValues = ref(unref(providedValues) || {});\r\n    // acts as a read only proxy of the initial values object\r\n    const computedInitials = computed(() => {\r\n        return initialValues.value;\r\n    });\r\n    function setInitialValues(values, updateFields = false) {\r\n        initialValues.value = Object.assign(Object.assign({}, initialValues.value), values);\r\n        if (!updateFields) {\r\n            return;\r\n        }\r\n        // update the pristine (non-dirty and non-touched fields)\r\n        // we exclude dirty and untouched fields because it's unlikely you want to change the form values using initial values\r\n        // we mostly watch them for API population or newly inserted fields\r\n        const isSafeToUpdate = (f) => f.meta.dirty || f.meta.touched;\r\n        keysOf(fields.value).forEach(fieldPath => {\r\n            const field = fields.value[fieldPath];\r\n            const isFieldDirty = Array.isArray(field) ? field.some(isSafeToUpdate) : isSafeToUpdate(field);\r\n            if (isFieldDirty) {\r\n                return;\r\n            }\r\n            const newValue = getFromPath(initialValues.value, fieldPath);\r\n            setInPath(formValues, fieldPath, newValue);\r\n        });\r\n    }\r\n    if (isRef(providedValues)) {\r\n        watch(providedValues, value => {\r\n            setInitialValues(value, true);\r\n        }, {\r\n            deep: true,\r\n        });\r\n    }\r\n    provide(FormInitialValues, computedInitials);\r\n    return {\r\n        initialValues: computedInitials,\r\n        setInitialValues,\r\n    };\r\n}\n\nconst Form = defineComponent({\r\n    name: 'Form',\r\n    inheritAttrs: false,\r\n    props: {\r\n        as: {\r\n            type: String,\r\n            default: 'form',\r\n        },\r\n        validationSchema: {\r\n            type: Object,\r\n            default: undefined,\r\n        },\r\n        initialValues: {\r\n            type: Object,\r\n            default: undefined,\r\n        },\r\n        initialErrors: {\r\n            type: Object,\r\n            default: undefined,\r\n        },\r\n        initialDirty: {\r\n            type: Object,\r\n            default: undefined,\r\n        },\r\n        initialTouched: {\r\n            type: Object,\r\n            default: undefined,\r\n        },\r\n        validateOnMount: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n    },\r\n    setup(props, ctx) {\r\n        const initialValues = toRef(props, 'initialValues');\r\n        const { errors, validate, handleReset, resetForm, values, meta, isSubmitting, handleSubmit, submitForm, setErrors, setFieldError, setFieldValue, setValues, setFieldDirty, setDirty, setFieldTouched, setTouched, } = useForm({\r\n            validationSchema: props.validationSchema,\r\n            initialValues,\r\n            initialErrors: props.initialErrors,\r\n            initialTouched: props.initialTouched,\r\n            initialDirty: props.initialDirty,\r\n            validateOnMount: props.validateOnMount,\r\n        });\r\n        const onSubmit = ctx.attrs.onSubmit ? handleSubmit(ctx.attrs.onSubmit) : submitForm;\r\n        function handleFormReset() {\r\n            handleReset();\r\n            if (typeof ctx.attrs.onReset === 'function') {\r\n                ctx.attrs.onReset();\r\n            }\r\n        }\r\n        function handleScopedSlotSubmit(evt, onSubmit) {\r\n            const onSuccess = typeof evt === 'function' && !onSubmit ? evt : onSubmit;\r\n            return handleSubmit(onSuccess)(evt);\r\n        }\r\n        return function renderForm() {\r\n            // FIXME: Hacky but cute way to expose some stuff to the rendered instance\r\n            // getCurrentInstance doesn't work with render fns, it returns the wrong instance\r\n            // we want to expose setFieldError and setErrors\r\n            if (!('setErrors' in this)) {\r\n                this.setFieldError = setFieldError;\r\n                this.setErrors = setErrors;\r\n                this.setFieldValue = setFieldValue;\r\n                this.setValues = setValues;\r\n                this.setFieldDirty = setFieldDirty;\r\n                this.setDirty = setDirty;\r\n                this.setFieldTouched = setFieldTouched;\r\n                this.setTouched = setTouched;\r\n                this.resetForm = resetForm;\r\n                this.validate = validate;\r\n            }\r\n            const children = normalizeChildren(ctx, {\r\n                meta: meta.value,\r\n                errors: errors.value,\r\n                values: values,\r\n                isSubmitting: isSubmitting.value,\r\n                validate,\r\n                handleSubmit: handleScopedSlotSubmit,\r\n                handleReset,\r\n                submitForm,\r\n                setErrors,\r\n                setFieldError,\r\n                setFieldValue,\r\n                setValues,\r\n                setFieldDirty,\r\n                setDirty,\r\n                setFieldTouched,\r\n                setTouched,\r\n                resetForm,\r\n            });\r\n            if (!props.as) {\r\n                return children;\r\n            }\r\n            // Attributes to add on a native `form` tag\r\n            const formAttrs = props.as === 'form'\r\n                ? {\r\n                    // Disables native validation as vee-validate will handle it.\r\n                    novalidate: true,\r\n                }\r\n                : {};\r\n            return h(\r\n            // avoid resolving the form component as itself\r\n            props.as === 'form' ? props.as : resolveDynamicComponent(props.as), Object.assign(Object.assign(Object.assign({}, formAttrs), ctx.attrs), { onSubmit, onReset: handleFormReset }), children);\r\n        };\r\n    },\r\n});\n\nconst ErrorMessage = defineComponent({\r\n    props: {\r\n        as: {\r\n            type: String,\r\n            default: undefined,\r\n        },\r\n        name: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n    },\r\n    setup(props, ctx) {\r\n        const errors = inject(FormErrorsSymbol, undefined);\r\n        const message = computed(() => {\r\n            return errors === null || errors === void 0 ? void 0 : errors.value[props.name];\r\n        });\r\n        return () => {\r\n            const children = normalizeChildren(ctx, {\r\n                message: message.value,\r\n            });\r\n            const tag = (props.as ? resolveDynamicComponent(props.as) : props.as);\r\n            const attrs = Object.assign({ role: 'alert' }, ctx.attrs);\r\n            // If no tag was specified and there are children\r\n            // render the slot as is without wrapping it\r\n            if (!tag && (children === null || children === void 0 ? void 0 : children.length)) {\r\n                return children;\r\n            }\r\n            // If no children in slot\r\n            // render whatever specified and fallback to a <span> with the message in it's contents\r\n            if (!(children === null || children === void 0 ? void 0 : children.length)) {\r\n                return h(tag || 'span', attrs, message.value);\r\n            }\r\n            return h(tag, attrs, children);\r\n        };\r\n    },\r\n});\n\nexport { ErrorMessage, Field, Form, configure, defineRule, useField, useForm, validate };\n","// 定义校验规则提供给vee-validate组件使用\r\nexport default {\r\n  // 校验account\r\n  account (value) {\r\n    // value是将来使用该规则的表单元素的值\r\n    // 1. 必填\r\n    // 2. 6-20个字符，需要以字母开头\r\n    // 如何反馈校验成功还是失败，返回true才是成功，其他情况失败，返回失败原因。\r\n    if (!value) return '请输入用户名'\r\n    if (!/^[a-zA-Z]\\w{5,19}$/.test(value)) return '字母开头且6-20个字符'\r\n    return true\r\n  },\r\n  password (value) {\r\n    if (!value) return '请输入密码'\r\n    if (!/^\\w{6,24}$/.test(value)) return '密码是6-24个字符'\r\n    return true\r\n  },\r\n  mobile (value) {\r\n    if (!value) return '请输入手机号'\r\n    if (!/^1[3-9]\\d{9}$/.test(value)) return '手机号格式错误'\r\n    return true\r\n  },\r\n  code (value) {\r\n    if (!value) return '请输入验证码'\r\n    if (!/^\\d{6}$/.test(value)) return '验证码错误'\r\n    return true\r\n  },\r\n  isAgree (value) {\r\n    if (!value) return '请勾选同意用户协议'\r\n    return true\r\n  }\r\n}\r\n","import { render } from \"./login-form.vue?vue&type=template&id=13a1ab50&scoped=true\"\nimport script from \"./login-form.vue?vue&type=script&lang=js\"\nexport * from \"./login-form.vue?vue&type=script&lang=js\"\n\nimport \"./login-form.vue?vue&type=style&index=0&id=13a1ab50&scoped=true&lang=less\"\n\nimport exportComponent from \"D:\\\\Web\\\\Demo\\\\erabbit-client-pc\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-13a1ab50\"]])\n\nexport default __exports__","import { render } from \"./index.vue?vue&type=template&id=4bac914d&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=4bac914d&scoped=true&lang=less\"\n\nimport exportComponent from \"D:\\\\Web\\\\Demo\\\\erabbit-client-pc\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4bac914d\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","src","_imports_0","alt","href","_hoisted_6","_hoisted_7","_createVNode","_component_login_header","onClick","$setup","active","_createBlock","_component_login_form","key","_createElementBlock","_hoisted_8","_component_login_footer","_component_router_link","to","_renderSlot","_ctx","undefined","name","__exports__","_hoisted_2","_hoisted_3","_component_Form","autocomplete","errors","_Fragment","_hoisted_21","_component_Field","type","error","mobile","$event","placeholder","_hoisted_23","_hoisted_26","code","_hoisted_27","_hoisted_29","_hoisted_11","account","_hoisted_13","_hoisted_16","password","_hoisted_18","as","isAgree","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","isCallable","fn","isObject","obj","Array","isArray","RULES","resolveRule","id","isLocator","value","__locatorRef","isHTMLTag","tag","includes","isFileInput","isYupValidator","validate","hasCheckedAttr","isIndex","Number","isEmptyContainer","length","Object","keys","isNotNestedPath","path","test","cleanupNonNestedPath","replace","getFromPath","object","split","filter","Boolean","reduce","acc","propKey","setInPath","i","unset","splice","unsetPath","pathValues","map","_","idx","slice","join","keysOf","record","injectWithSelf","symbol","def","vm","getCurrentInstance","inject","provides","isEvent","evt","Event","srcElement","normalizeEventValue","input","target","_value","files","from","normalizeRules","rules","defineProperty","writable","enumerable","configurable","_$$isNormalized","prev","curr","params","normalizeParams","buildParams","rule","parsedRule","parseRule","provided","mapValueToLocator","createLocator","locator","crossTable","val","extractLocators","normalizeChildren","context","slotProps","slots","default","DEFAULT_CONFIG","generateMessage","field","bails","validateOnBlur","validateOnChange","validateOnInput","validateOnModelUpdate","currentConfig","assign","getConfig","async","options","shouldBail","formData","values","result","_validate","validateFieldWithYup","form","isValid","message","_generateFieldError","_test","push","abortEarly","then","catch","err","validator","Error","fillTargetValues","ctx","fieldCtx","normalize","param","FormSymbol","Symbol","FormErrorsSymbol","FormInitialValues","ID_COUNTER","useField","opts","fid","MAX_SAFE_INTEGER","initialValue","validateOnMount","valueProp","label","validateOnValueUpdate","normalizeOptions","unref","meta","handleBlur","handleInput","resetValidationState","setValidationState","checked","useValidationState","initValue","nonYupSchemaRules","extractRuleFromSchema","schema","normalizedRules","computed","validate$1","_a","pending","validateSchema","handleChange","e","_b","dirty","onMounted","errorMessage","setTouched","isTouched","touched","setDirty","isDirty","unwatchValue","watchValue","watch","deep","resetField","state","handleReset","isRef","register","onBeforeUnmount","unregister","dependencies","rulesVal","deps","dep","watchEffect","forEach","defaults","ref","formInitialValues","resetMeta","useMeta","useFieldValue","valid","initialMeta","reactive","_c","fieldName","get","set","newVal","setFieldValue","Field","defineComponent","inheritAttrs","props","String","required","Function","setup","toRef","validateField","attrs","modelValue","isDuringValueTick","valueTick","nextTick","onChangeHandler","emit","onInputHandler","baseOnBlur","onBlur","baseOnInput","onInput","baseOnChange","onChange","makeSlotProps","fieldProps","resolveTag","resolveDynamicComponent","children","h","useForm","fields","isSubmitting","fieldsById","firstField","formValues","valuesByFid","group","find","f","initialValues","setInitialValues","useFormInitialValues","useFormMeta","setFieldError","fieldInstance","instance","setErrors","oldVal","indexOf","fieldItem","newValue","setValues","setFieldTouched","setFieldDirty","resetForm","registerField","newPath","flush","unregisterField","valueIdx","call","formCtx","validationSchema","shouldMutate","validateYupSchema","results","every","r","Promise","all","immutableFormValues","handleSubmit","preventDefault","stopPropagation","submitForm","submit","initialErrors","initialDirty","initialTouched","provide","MERGE_STRATEGIES","flags","flag","mergeMethod","inner","errorsByPath","aggregatedResult","fieldId","messages","fieldResult","isGroup","some","providedValues","computedInitials","updateFields","isSafeToUpdate","fieldPath","isFieldDirty","Form","onSubmit","handleFormReset","onReset","handleScopedSlotSubmit","onSuccess","this","formAttrs","novalidate","role","components","isMsgLogin","mySchema","LoginHeader","LoginFooter","LoginForm","isActive","render"],"sourceRoot":""}